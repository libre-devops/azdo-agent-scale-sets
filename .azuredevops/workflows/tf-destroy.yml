name: $(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

trigger: none # Disable automatic triggers

parameters:
  - name: terraform_code_location
    displayName: What working directory should be passed to the script
    type: string
    default: "examples/module-development"

  - name: run_trivy
    displayName: Whether trivy should be ran
    type: boolean
    default: "true"

  - name: run_checkov
    displayName: Whether checkov should be ran
    type: boolean
    default: "false"

  - name: run_terraform_compliance
    displayName: Whether terraform-compliance should be ran
    type: boolean
    default: "false"

  - name: terraform_compliance_policy_files
    displayName: The location of terraform-compliance files if used
    type: string
    default: "git:https://github.com/libre-devops/azure-naming-convention.git//?ref=main"

  - name: enable_debug_mode
    displayName: Whether debug mode should be enable for within the script
    type: boolean
    default: "false"

  - name: delete_plan_files
    displayName: Whether the tfplan files should be auto deleted
    type: boolean
    default: "true"

  - name: terraform_version
    displayName: What version should tenv attempt to use?
    type: string
    default: "latest"

  - name: terraform_state_name
    displayName: Name of the Terraform state file
    type: string
    default: 'lbd-uks-prd-test-build.terraform.tfstate'

  - name: pool_name
    displayName: "The name of the pool to use"
    type: string
    values:
      - "Default"
      - "Azure Pipeline"
      - "lbd-linux-pool"
    default: "Default"

  - name: variable_group_name
    type: string
    default: "kv-lbd-uks-prd-mgmt-01"
    displayName: "Enter the variable group which contains your authentication information"

variables:
  - group: ${{ parameters.variable_group_name }}


jobs:
  - job: RunScript
    displayName: 'Run Script'
    pool: ${{ parameters.pool_name }}
    workspace:
      clean: all
    steps:
      - checkout: self

      - pwsh: |
          brew install trivy
        displayName: 'Install trivy'
        condition: ${{ eq(parameters.run_trivy, true) }}

      - pwsh: |
          pip3 install checkov
        displayName: 'Install checkov'
        condition: ${{ eq(parameters.run_checkov, true) }}

      - pwsh: |
          pip3 install terraform-compliance
        displayName: 'Install terraform-compliance'
        condition: ${{ eq(parameters.run_terraform_compliance, true) }}

      - pwsh: |
          Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted
          Install-Module -Name Az.Accounts -Force -AllowClobber -Scope CurrentUser
          Install-Module -Name Az.Storage -Force -AllowClobber -Scope CurrentUser
        displayName: 'Install PowerShell modules'

      - pwsh: |
          function Convert-ToBoolean($value)
            {
                $valueLower = $value.ToLower()
                if ($valueLower -eq "true")
                {
                    return $true
                }
                elseif ($valueLower -eq "false")
                {
                    return $false
                }
                else
                {
                    throw "[$( $MyInvocation.MyCommand.Name )] Error: Invalid value - $value. Exiting."
                    exit 1
                }
            }
          
          $DebugMode = $(Convert-ToBoolean ${{ parameters.enable_debug_mode }})
          
          .\Run-AzTerraform.ps1 `
            -TerraformCodeLocation ${{ parameters.terraform_code_location }} `
            -RunTerraformInit true `
            -RunTerraformPlan false `
            -RunTerraformPlanDestroy true `
            -RunTerraformApply false `
            -RunTerraformDestroy true `
            -DebugMode $DebugMode `
            -RunTrivy ${{ parameters.run_trivy }} `
            -RunCheckov ${{ parameters.run_checkov }} `
            -RunTerraformCompliance ${{ parameters.run_terraform_compliance }} `
            -TerraformCompliancePolicyFiles ${{ parameters.terraform_compliance_policy_files }} `
            -DeletePlanFiles ${{ parameters.delete_plan_files }} `
            -TerraformVersion ${{ parameters.terraform_version }} `
            -BackendStorageSubscriptionId $(SpokeSubscriptionId) `
            -BackendStorageAccountRgName $(SpokeMgmtRgName) `
            -BackendStorageAccountName $(SpokeSaName) `
            -BackendStorageAccountBlobContainerName $(SpokeSaBlobContainerName) `
            -BackendStorageAccountBlobStatefileName ${{ parameters.terraform_state_name }}
        displayName: 'Run Script'
        env:
          ARM_CLIENT_ID: $(SpokeSvpApplicationId)
          ARM_CLIENT_SECRET: $(SpokeSvpClientSecret)
          ARM_SUBSCRIPTION_ID: $(SpokeSubscriptionId)
          ARM_TENANT_ID: $(SpokeSvpTenantId)
          ARM_USE_AZUREAD: true
